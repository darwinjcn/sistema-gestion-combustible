#!/bin/bash

# =============================================================================
# Script de Verificaci√≥n de Configuraci√≥n
# Sistema de Gesti√≥n de Combustible CANTV Lara
# =============================================================================

echo "üîç Verificando configuraci√≥n del proyecto..."
echo "============================================="

# Colores
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Funci√≥n para verificar puertos
check_port() {
    local port=$1
    local service=$2
    
    if lsof -i :$port >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Puerto $port ($service) est√° en uso${NC}"
        lsof -i :$port | head -2
    else
        echo -e "${RED}‚ùå Puerto $port ($service) est√° libre${NC}"
    fi
    echo ""
}

# Verificar puertos
echo -e "${BLUE}üì° Verificando puertos...${NC}"
check_port 3000 "React Frontend"
check_port 8000 "Django Backend"
check_port 5432 "PostgreSQL"

# Verificar archivos de configuraci√≥n
echo -e "${BLUE}üìÅ Verificando archivos de configuraci√≥n...${NC}"

# Verificar .env del frontend
if [ -f "frontend/.env" ]; then
    echo -e "${GREEN}‚úÖ frontend/.env existe${NC}"
    echo "Contenido:"
    cat frontend/.env | grep -E "^(PORT|REACT_APP_API_URL)" | head -5
else
    echo -e "${RED}‚ùå frontend/.env no existe${NC}"
fi
echo ""

# Verificar settings.py
if [ -f "proyecto/settings.py" ]; then
    echo -e "${GREEN}‚úÖ proyecto/settings.py existe${NC}"
    echo "CORS configurado para:"
    grep -A 5 "CORS_ALLOWED_ORIGINS" proyecto/settings.py | head -6
else
    echo -e "${RED}‚ùå proyecto/settings.py no existe${NC}"
fi
echo ""

# Verificar base de datos PostgreSQL
echo -e "${BLUE}üóÑÔ∏è  Verificando conexi√≥n a PostgreSQL...${NC}"
if command -v psql >/dev/null 2>&1; then
    if PGPASSWORD=123456 psql -h localhost -U postgres -d db_combustible -c "SELECT version();" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Conexi√≥n a PostgreSQL exitosa${NC}"
    else
        echo -e "${RED}‚ùå No se puede conectar a PostgreSQL${NC}"
        echo "Verifica que PostgreSQL est√© ejecut√°ndose y las credenciales sean correctas"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  psql no est√° instalado, no se puede verificar PostgreSQL${NC}"
fi
echo ""

# Verificar dependencias Python
echo -e "${BLUE}üêç Verificando dependencias Python...${NC}"
if [ -f "venv/bin/activate" ]; then
    source venv/bin/activate
    echo -e "${GREEN}‚úÖ Entorno virtual activado${NC}"
    
    # Verificar Django
    if python -c "import django; print(f'Django {django.get_version()}')" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Django instalado correctamente${NC}"
    else
        echo -e "${RED}‚ùå Django no est√° instalado${NC}"
    fi
    
    # Verificar DRF
    if python -c "import rest_framework; print('DRF instalado')" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Django REST Framework instalado${NC}"
    else
        echo -e "${RED}‚ùå Django REST Framework no est√° instalado${NC}"
    fi
    
    # Verificar CORS
    if python -c "import corsheaders; print('CORS instalado')" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ django-cors-headers instalado${NC}"
    else
        echo -e "${RED}‚ùå django-cors-headers no est√° instalado${NC}"
    fi
else
    echo -e "${RED}‚ùå Entorno virtual no encontrado${NC}"
fi
echo ""

# Verificar dependencias Node.js
echo -e "${BLUE}üü® Verificando dependencias Node.js...${NC}"
if [ -d "frontend/node_modules" ]; then
    echo -e "${GREEN}‚úÖ node_modules existe en frontend${NC}"
    
    cd frontend/
    if npm list react >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ React instalado${NC}"
    else
        echo -e "${RED}‚ùå React no est√° instalado${NC}"
    fi
    
    if npm list @mui/material >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Material-UI instalado${NC}"
    else
        echo -e "${RED}‚ùå Material-UI no est√° instalado${NC}"
    fi
    cd ..
else
    echo -e "${RED}‚ùå node_modules no existe en frontend${NC}"
    echo "Ejecuta: cd frontend && npm install"
fi
echo ""

# Resumen final
echo -e "${BLUE}üìã Resumen de configuraci√≥n:${NC}"
echo "================================="
echo -e "‚Ä¢ React Frontend: ${GREEN}http://localhost:3000${NC}"
echo -e "‚Ä¢ Django Backend: ${GREEN}http://localhost:8000${NC}"
echo -e "‚Ä¢ Django Admin: ${GREEN}http://localhost:8000/admin/${NC}"
echo -e "‚Ä¢ API REST: ${GREEN}http://localhost:8000/api/${NC}"
echo -e "‚Ä¢ Base de datos: ${GREEN}PostgreSQL (localhost:5432)${NC}"
echo ""

echo -e "${YELLOW}üí° Para iniciar el proyecto:${NC}"
echo "1. Backend: source venv/bin/activate && python manage.py runserver"
echo "2. Frontend: cd frontend && npm start"
echo ""

echo -e "${GREEN}üéâ Verificaci√≥n completada!${NC}"